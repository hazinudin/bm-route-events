services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5431:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - docker.env

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  migrate:
    build:
      context: validation-gateway/infra/migration
      dockerfile: Dockerfile
    networks:
      - backend
    command: >
      -path /migrations
      -database postgres://postgres:$POSTGRES_PASSWORD@postgres:5432/postgres?sslmode=disable
      up
    depends_on:
      postgres:
        condition: service_healthy

  eventlistener:
    build:
      context: validation-gateway
      dockerfile: cmd/eventlistener/Dockerfile
    container_name: eventlistener_service
    depends_on:
      server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pgrep", "-f", "eventlistener"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - docker.env

  server:
    build:
      context: validation-gateway
      dockerfile: cmd/server/Dockerfile
    container_name: server_service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pgrep", "-f", "server"]
    env_file:
      - docker.env

  workers:
    build:
      context: .
      dockerfile: worker/Dockerfile
    volumes:
      - "${EXCEL_FILES_DIRECTORY}:/data"
    container_name: validation_worker
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      eventlistener:
        condition: service_healthy
      server:
        condition: service_healthy
    networks:
      - backend
    env_file:
      - worker/docker.env

  lrs_service:
    image: hazinuddin/lrs_service:1.0
    container_name: lrs_service
    ports:
      - "50052:50052"
    networks:
      - backend
    env_file:
      - docker.env

networks:
  backend:
    driver: bridge
